{"version":3,"sources":["utils/searchHelper.ts","utils/vars.ts","components/PeopleFilters.tsx","components/Loader/Loader.tsx","utils/handleChangeSort.ts","components/PersonLink.tsx","components/PersonRow.tsx","components/PeopleTable.tsx","api.ts","utils/getMother.ts","utils/getFather.ts","components/PeoplePage.tsx","utils/getSortCategory.ts","components/Navbar.tsx","App.tsx","index.tsx"],"names":["getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","availableCenturies","Filters","SortCategories","DEFAULT_CENTURIES","PeopleFilters","useSearchParams","searchParams","setSearchParams","centuries","getAll","query","get","sex","className","values","map","classNames","to","search","type","placeholder","onChange","event","params","setSearchWith","target","century","preparedCentury","searchQuery","includes","filter","ch","Fragment","length","Loader","handleChangeSort","sortParam","sort","order","sorts","PersonLink","person","slug","replace","name","PersonRow","personSlug","useParams","born","died","mother","motherName","father","fatherName","PeopleTable","people","sortLink","useMemo","toUpperCase","slice","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","getMother","persons","find","getFather","PeoplePage","useState","isLoading","setIsLoading","setPeople","isError","setIsError","useEffect","getPeople","preparedPeople","catch","finally","filteredPeople","visiblePeople","Name","Sex","a","b","localeCompare","Born","Died","reverse","toLowerCase","includesQuery","some","Math","floor","getSortCategory","getLinkClass","isActive","Navbar","role","App","path","element","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.6313ff4c.chunk.js","sourcesContent":["export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\n/**\n * This function prepares a correct search string\n * from a given currentParams and paramsToUpdate.\n */\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams, // it's our custom type\n): string {\n  // copy currentParams by creating new object from a string\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  // Here is the example of paramsToUpdate\n  // {\n  //   sex: 'm',                ['sex', 'm']\n  //   order: null,             ['order', null]\n  //   centuries: ['16', '19'], ['centuries', ['16', '19']]\n  // }\n  //\n  // - params with the `null` value are deleted;\n  // - string value is set to given param key;\n  // - array of strings adds several params with the same key;\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        // we delete the key to remove old values\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  // we return a string to use it inside links\n  return newParams.toString();\n}\n","export const GENDER_FEMALE = 'f';\nexport const GENDER_MALE = 'm';\nexport const NOT_SET_VALUE = '-';\nexport const availableCenturies = [16, 17, 18, 19, 20];\n\nexport enum Filters {\n  All = 'all',\n  Male = 'male',\n  Female = 'female',\n}\n\nexport enum SortCategories {\n  Name = 'name',\n  Sex = 'sex',\n  Born = 'born',\n  Died = 'died',\n}\n\nexport const DEFAULT_CENTURIES = [];\nexport const DEFAULT_QUERY = '';\nexport const DEFAULT_SEX = 'all';\nexport const DEFAULT_SORT = '';\nexport const DEFAULT_ORDER = '';\n","import { Link, useSearchParams } from 'react-router-dom';\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getSearchWith } from '../utils/searchHelper';\nimport {\n  DEFAULT_CENTURIES,\n  DEFAULT_QUERY,\n  DEFAULT_SEX,\n  Filters,\n  availableCenturies,\n} from '../utils/vars';\n\nexport const PeopleFilters = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const centuries = searchParams.getAll('centuries') || DEFAULT_CENTURIES;\n  const query = searchParams.get('query') || DEFAULT_QUERY;\n  const sex = searchParams.get('sex') || DEFAULT_SEX;\n\n  const setSearchWith = (params: { query: string }) => {\n    const search = getSearchWith(searchParams, params);\n\n    setSearchParams(search);\n  };\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchWith({ query: event.target.value });\n  };\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        {Object.values(Filters).map(value => {\n          return (\n            <Link\n              className={classNames('is-capitalized', {\n                'is-active': sex === value,\n              })}\n              to={{\n                search: getSearchWith(searchParams, {\n                  sex: value === 'all' ? null : value[0],\n                }),\n              }}\n              key={value}\n            >\n              {value}\n            </Link>\n          );\n        })}\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            value={query}\n            onChange={handleQueryChange}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {availableCenturies.map((century) => {\n              const preparedCentury = century.toString();\n              const searchQuery = getSearchWith(searchParams, {\n                centuries: centuries.includes(preparedCentury)\n                  ? centuries.filter(ch => preparedCentury !== ch)\n                  : [...centuries, preparedCentury],\n              });\n\n              return (\n                <React.Fragment key={century}>\n                  <Link\n                    data-cy=\"century\"\n                    className={classNames('button', 'mr-1', {\n                      'is-info': centuries.includes(century.toString()),\n                    })}\n                    to={{ search: searchQuery }}\n                  >\n                    {century}\n                  </Link>\n                </React.Fragment>\n              );\n            })}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <Link\n              data-cy=\"centuryALL\"\n              className={classNames('button', 'is-success',\n                { 'is-outlined': centuries.length })}\n              to={{\n                search: getSearchWith(searchParams, {\n                  centuries: [],\n                }),\n              }}\n            >\n              All\n            </Link>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <Link\n          className=\"button is-link is-outlined is-fullwidth\"\n          to={{\n            search: getSearchWith(searchParams, {\n              query: null,\n              sex: null,\n              centuries: null,\n            }),\n          }}\n        >\n          Reset all filters\n        </Link>\n      </div>\n    </nav>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","export function handleChangeSort(sortParam: string,\n  sort: string | null,\n  order: string | null) {\n  const sorts: { [key: string]: string | null } = { sort, order };\n\n  if (!sorts.sort) {\n    sorts.sort = sortParam;\n\n    return sorts;\n  }\n\n  if (!sorts.order && sorts.sort && sorts.sort === sortParam) {\n    sorts.order = 'desc';\n\n    return sorts;\n  }\n\n  if (!sorts.order && sorts.sort && sorts.sort !== sortParam) {\n    sorts.sort = sortParam;\n\n    return sorts;\n  }\n\n  if (sorts.order && sorts.sort && sorts.sort === sortParam) {\n    sorts.sort = null;\n    sorts.order = null;\n\n    return sorts;\n  }\n\n  if (sorts.order && sorts.sort && sorts.sort !== sortParam) {\n    sorts.sort = sortParam;\n    sorts.order = null;\n  }\n\n  return sorts;\n}\n","import { Link } from 'react-router-dom';\nimport { GENDER_FEMALE } from '../utils/vars';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      to={`${person.slug}`}\n      replace\n      className={person.sex === GENDER_FEMALE ? 'has-text-danger' : ''}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../types';\nimport { NOT_SET_VALUE } from '../utils/vars';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonRow: React.FC<Props> = ({ person }) => {\n  const { personSlug } = useParams();\n  const {\n    slug,\n    sex,\n    born,\n    died,\n    mother,\n    motherName,\n    father,\n    fatherName,\n  } = person;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': slug === personSlug,\n      })}\n      key={slug}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother ? (\n          <PersonLink person={mother} />\n        ) : (\n          motherName || NOT_SET_VALUE\n        )}\n      </td>\n      <td>\n        {father ? (\n          <PersonLink person={father} />\n        ) : (\n          fatherName || NOT_SET_VALUE\n        )}\n      </td>\n    </tr>\n  );\n};\n","import { Link, useSearchParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { useMemo } from 'react';\nimport { Person } from '../types';\nimport { SortCategories } from '../utils/vars';\nimport { getSearchWith } from '../utils/searchHelper';\nimport { handleChangeSort } from '../utils/handleChangeSort';\nimport { PersonRow } from './PersonRow';\n\ntype Props = {\n  people: Person[],\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const [searchParams] = useSearchParams();\n  const sort = searchParams.get('sort');\n  const order = searchParams.get('order');\n\n  const sortLink = useMemo(() => handleChangeSort,\n    [sort, order]);\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {Object.values(SortCategories).map(value => (\n            <th key={value}>\n              <span\n                className=\"is-flex is-flex-wrap-nowrap\"\n              >\n                {value[0].toUpperCase() + value.slice(1)}\n                <Link to={{\n                  search: getSearchWith(searchParams, {\n                    sort: sortLink(value, sort, order).sort,\n                    order: sortLink(value, sort, order).order,\n                  }),\n                }}\n                >\n                  <span className=\"icon\">\n                    <i className={classNames('fas', {\n                      'fa-sort-up': sort === value && !order,\n                      'fa-sort-down': sort === value && order,\n                      'fa-sort': (!sort || sort !== value),\n                    })}\n                    />\n                  </span>\n                </Link>\n              </span>\n            </th>\n          ))}\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map((person) => {\n          return (\n            <PersonRow person={person} />\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { Person } from '../types';\nimport { GENDER_FEMALE } from './vars';\n\nexport function getMother(persons: Person[], person: Person) {\n  return persons.find((mother) => mother.sex === GENDER_FEMALE\n  && mother.name === person.motherName);\n}\n","import { Person } from '../types';\nimport { GENDER_MALE } from './vars';\n\nexport function getFather(persons: Person[], person: Person) {\n  return persons.find((father) => father.sex === GENDER_MALE\n  && father.name === person.fatherName);\n}\n","import { useEffect, useMemo, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { PeopleFilters } from './PeopleFilters';\nimport { Loader } from './Loader';\nimport { PeopleTable } from './PeopleTable';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport {\n  DEFAULT_CENTURIES,\n  DEFAULT_ORDER,\n  DEFAULT_QUERY,\n  DEFAULT_SEX,\n  DEFAULT_SORT,\n} from '../utils/vars';\nimport { getSortCategory } from '../utils/getSortCategory';\nimport { getMother } from '../utils/getMother';\nimport { getFather } from '../utils/getFather';\n\nexport const PeoplePage = () => {\n  const [searchParams] = useSearchParams();\n  const [isLoading, setIsLoading] = useState(true);\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isError, setIsError] = useState(false);\n\n  const sort = searchParams.get('sort') || DEFAULT_SORT;\n  const order = searchParams.get('order') || DEFAULT_ORDER;\n  const sex = searchParams.get('sex') || DEFAULT_SEX;\n  const query = searchParams.get('query') || DEFAULT_QUERY;\n  const centuries = searchParams.getAll('centuries') || DEFAULT_CENTURIES;\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPeople()\n      .then((persons) => {\n        const preparedPeople: Person[] = persons.map((person: Person) => ({\n          ...person,\n          mother: getMother(persons, person),\n          father: getFather(persons, person),\n        }));\n\n        setPeople(preparedPeople);\n      })\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const filteredPeople = useMemo(() => getSortCategory(people,\n    sort,\n    order,\n    sex,\n    query,\n    centuries),\n  [sort, order, sex, query, centuries]);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          <div className=\"column is-7-tablet is-narrow-desktop\">\n            <PeopleFilters />\n          </div>\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {isLoading ? (\n                <Loader />\n              ) : (\n                <>\n                  <PeopleTable people={filteredPeople} />\n                  {isError && (\n                    <p data-cy=\"peopleLoadingError\">Something went wrong</p>\n                  )}\n                  {!people.length && (\n                    <p data-cy=\"noPeopleMessage\">\n                      There are no people on the server\n                    </p>\n                  )}\n                  {!filteredPeople.length && (\n                    <p>\n                      There are no people matching the current search criteria\n                    </p>\n                  )}\n                </>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Person } from '../types';\nimport { SortCategories } from './vars';\n\nfunction includesQuery(person: Person, query: string) {\n  return person.name.toLowerCase().includes(query)\n        || person.fatherName?.toLowerCase().includes(query)\n        || person.motherName?.toLowerCase().includes(query);\n}\n\nexport function getSortCategory(\n  people: Person[],\n  sort: string,\n  order: string,\n  sex: string,\n  query: string,\n  centuries: string[],\n) {\n  let visiblePeople = [...people];\n\n  switch (sort) {\n    case SortCategories.Name:\n    case SortCategories.Sex:\n      visiblePeople.sort((a, b) => a[sort].localeCompare(b[sort]));\n      break;\n\n    case SortCategories.Born:\n    case SortCategories.Died:\n      visiblePeople.sort((a, b) => a[sort] - b[sort]);\n      break;\n\n    default:\n      break;\n  }\n\n  if (order) {\n    visiblePeople.reverse();\n  }\n\n  if (sex !== 'all') {\n    visiblePeople = visiblePeople.filter(person => {\n      return person.sex === sex;\n    });\n  }\n\n  if (query) {\n    visiblePeople = visiblePeople.filter(person => {\n      const normalizedQuery = query.toLowerCase();\n\n      return includesQuery(person, normalizedQuery);\n    });\n  }\n\n  if (centuries.length) {\n    visiblePeople = visiblePeople.filter(person => {\n      return centuries.some(century => +century === Math.floor(\n        (person.born - 1) / 100,\n      ) + 1);\n    });\n  }\n\n  return visiblePeople;\n}\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ninterface Options {\n  isActive: boolean\n}\n\nconst getLinkClass = ({ isActive }: Options) => classNames('navbar-item', {\n  'has-background-grey-lighter': isActive,\n});\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink className={getLinkClass} to=\"/\">Home</NavLink>\n\n          <NavLink\n            aria-current=\"page\"\n            className={getLinkClass}\n            to=\"people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport { PeoplePage } from './components/PeoplePage';\nimport { Navbar } from './components/Navbar';\n\nimport './App.scss';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n            <Route path=\"people\" element={<PeoplePage />}>\n              <Route path=\":personSlug\" element={<PeoplePage />} />\n            </Route>\n            <Route path=\"home\" element={<Navigate to=\"/\" />} />\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n          </Routes>\n\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}