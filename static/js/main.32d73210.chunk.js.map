{"version":3,"sources":["utils/searchHelper.ts","utils/vars.ts","components/PeopleFilters.tsx","components/Loader/Loader.tsx","components/PeopleTable.tsx","api.ts","components/PeoplePage.tsx","components/Navbar.tsx","App.tsx","index.tsx"],"names":["getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","availableCenturies","Filters","SortCategories","PeopleFilters","useSearchParams","searchParams","setSearchParams","centuries","getAll","query","get","sex","className","values","map","classNames","to","search","type","placeholder","onChange","event","params","setSearchWith","target","century","includes","filter","ch","length","Loader","PeopleTable","people","personSlug","useParams","sort","order","onSortChange","sortParam","sorts","sortLink","useMemo","toUpperCase","slice","person","name","born","died","fatherName","motherName","slug","father","mother","isFemale","replace","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useState","isLoading","setIsLoading","setPeople","isError","setIsError","useEffect","getPeople","persons","preparedPeople","find","catch","finally","filteredPeople","visiblePeople","Name","Sex","a","b","localeCompare","Born","Died","reverse","normalizedQuery","toLowerCase","some","Math","floor","getLinkClass","isActive","Navbar","role","App","path","element","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.32d73210.chunk.js","sourcesContent":["export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\n/**\n * This function prepares a correct search string\n * from a given currentParams and paramsToUpdate.\n */\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams, // it's our custom type\n): string {\n  // copy currentParams by creating new object from a string\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  // Here is the example of paramsToUpdate\n  // {\n  //   sex: 'm',                ['sex', 'm']\n  //   order: null,             ['order', null]\n  //   centuries: ['16', '19'], ['centuries', ['16', '19']]\n  // }\n  //\n  // - params with the `null` value are deleted;\n  // - string value is set to given param key;\n  // - array of strings adds several params with the same key;\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        // we delete the key to remove old values\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  // we return a string to use it inside links\n  return newParams.toString();\n}\n","export const GENDER_FEMALE = 'f';\nexport const GENDER_MALE = 'm';\nexport const NOT_SET_VALUE = '-';\nexport const availableCenturies = [16, 17, 18, 19, 20];\n\nexport enum Filters {\n  All = 'all',\n  Male = 'male',\n  Female = 'female',\n}\n\nexport enum SortCategories {\n  Name = 'name',\n  Sex = 'sex',\n  Born = 'born',\n  Died = 'died',\n}\n","import { Link, useSearchParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { getSearchWith } from '../utils/searchHelper';\nimport { Filters, availableCenturies } from '../utils/vars';\n\nexport const PeopleFilters = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const centuries = searchParams.getAll('centuries') || [];\n  const query = searchParams.get('query') || '';\n  const sex = searchParams.get('sex') || 'all';\n\n  const setSearchWith = (params: { query: string }) => {\n    const search = getSearchWith(searchParams, params);\n\n    setSearchParams(search);\n  };\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchWith({ query: event.target.value });\n  };\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        {Object.values(Filters).map(value => {\n          if (value === 'all') {\n            return (\n              <Link\n                className={classNames('is-capitalized', {\n                  'is-active': sex === value,\n                })}\n                to={{\n                  search: getSearchWith(searchParams, {\n                    sex: null,\n                  }),\n                }}\n                key={value}\n              >\n                {value}\n              </Link>\n            );\n          }\n\n          return (\n            <Link\n              className={classNames('is-capitalized', {\n                'is-active': sex === value,\n              })}\n              to={{\n                search: getSearchWith(searchParams, {\n                  sex: value[0],\n                }),\n              }}\n              key={value}\n            >\n              {value}\n            </Link>\n          );\n        })}\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            value={query}\n            onChange={handleQueryChange}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {availableCenturies.map((century) => (\n              <Link\n                data-cy=\"century\"\n                className={classNames('button mr-1', {\n                  'is-info': centuries.includes(century.toString()),\n                })}\n                to={{\n                  search: getSearchWith(searchParams, {\n                    centuries: centuries.includes(century.toString())\n                      ? centuries.filter(ch => century.toString() !== ch)\n                      : [...centuries, century.toString()],\n                  }),\n                }}\n                key={century}\n              >\n                {century}\n              </Link>\n            ))}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <Link\n              data-cy=\"centuryALL\"\n              className={classNames('button is-success',\n                { 'is-outlined': centuries.length })}\n              to={{\n                search: getSearchWith(searchParams, {\n                  centuries: [],\n                }),\n              }}\n            >\n              All\n            </Link>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <Link\n          className=\"button is-link is-outlined is-fullwidth\"\n          to={{\n            search: getSearchWith(searchParams, {\n              query: null,\n              sex: null,\n              centuries: null,\n            }),\n          }}\n        >\n          Reset all filters\n        </Link>\n      </div>\n    </nav>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Link, useParams, useSearchParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { useMemo } from 'react';\nimport { Person } from '../types';\nimport { GENDER_FEMALE, NOT_SET_VALUE, SortCategories } from '../utils/vars';\nimport { getSearchWith } from '../utils/searchHelper';\n\ntype Props = {\n  people: Person[],\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { personSlug } = useParams();\n  const [searchParams] = useSearchParams();\n  const sort = searchParams.get('sort');\n  const order = searchParams.get('order');\n\n  const onSortChange = (sortParam: string) => {\n    const sorts: { [key: string]: string | null } = { sort, order };\n\n    if (!sorts.sort) {\n      sorts.sort = sortParam;\n\n      return sorts;\n    }\n\n    if (!sorts.order && sorts.sort && sorts.sort === sortParam) {\n      sorts.order = 'desc';\n\n      return sorts;\n    }\n\n    if (!sorts.order && sorts.sort && sorts.sort !== sortParam) {\n      sorts.sort = sortParam;\n\n      return sorts;\n    }\n\n    if (sorts.order && sorts.sort && sorts.sort === sortParam) {\n      sorts.sort = null;\n      sorts.order = null;\n\n      return sorts;\n    }\n\n    if (sorts.order && sorts.sort && sorts.sort !== sortParam) {\n      sorts.sort = sortParam;\n      sorts.order = null;\n    }\n\n    return sorts;\n  };\n\n  const sortLink = useMemo(() => onSortChange, [sort, order]);\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {Object.values(SortCategories).map(value => (\n            <th>\n              <span\n                className=\"is-flex is-flex-wrap-nowrap\"\n              >\n                {value[0].toUpperCase() + value.slice(1)}\n                <Link to={{\n                  search: getSearchWith(searchParams, {\n                    sort: sortLink(value).sort,\n                    order: sortLink(value).order,\n                  }),\n                }}\n                >\n                  <span className=\"icon\">\n                    <i className={classNames('fas', {\n                      'fa-sort-up': sort === value && !order,\n                      'fa-sort-down': sort === value && order,\n                      'fa-sort': (!sort || sort !== value),\n                    })}\n                    />\n                  </span>\n                </Link>\n              </span>\n            </th>\n          ))}\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map((person) => {\n          const {\n            name,\n            sex,\n            born,\n            died,\n            fatherName,\n            motherName,\n            slug,\n            father,\n            mother,\n          } = person;\n\n          const isFemale = person.sex === GENDER_FEMALE;\n\n          return (\n            <tr\n              data-cy=\"person\"\n              className={classNames({\n                'has-background-warning': slug === personSlug,\n              })}\n              key={slug}\n            >\n              <td>\n                <Link\n                  to={slug}\n                  className={classNames({\n                    'has-text-danger': isFemale,\n                  })}\n                >\n                  {name}\n                </Link>\n              </td>\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n              <td>\n                {mother ? (\n                  <Link\n                    to={`${mother.slug}`}\n                    replace\n                    className=\"has-text-danger\"\n                  >\n                    {motherName}\n                  </Link>\n                ) : (\n                  motherName || NOT_SET_VALUE\n                )}\n              </td>\n              <td>\n                {father ? (\n                  <Link to={`${father.slug}`}>\n                    {fatherName}\n                  </Link>\n                ) : (\n                  fatherName || NOT_SET_VALUE\n                )}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useEffect, useMemo, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { PeopleFilters } from './PeopleFilters';\nimport { Loader } from './Loader';\nimport { PeopleTable } from './PeopleTable';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { GENDER_FEMALE, GENDER_MALE, SortCategories } from '../utils/vars';\n\nexport const PeoplePage = () => {\n  const [searchParams] = useSearchParams();\n  const [isLoading, setIsLoading] = useState(true);\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isError, setIsError] = useState(false);\n\n  const sort = searchParams.get('sort') || '';\n  const order = searchParams.get('order') || '';\n  const sex = searchParams.get('sex') || '';\n  const query = searchParams.get('query') || '';\n  const centuries = searchParams.getAll('centuries') || [];\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPeople()\n      .then((persons) => {\n        const preparedPeople: Person[] = persons.map((person: Person) => ({\n          ...person,\n          mother: persons.find((mother) => mother.sex === GENDER_FEMALE\n            && mother.name === person.motherName),\n          father: persons.find((father) => father.sex === GENDER_MALE\n            && father.name === person.fatherName),\n        }));\n\n        setPeople(preparedPeople);\n      })\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const filteredPeople = useMemo(() => {\n    let visiblePeople = [...people];\n\n    switch (sort) {\n      case SortCategories.Name:\n      case SortCategories.Sex:\n        visiblePeople.sort((a, b) => a[sort].localeCompare(b[sort]));\n        break;\n\n      case SortCategories.Born:\n      case SortCategories.Died:\n        visiblePeople.sort((a, b) => a[sort] - b[sort]);\n        break;\n\n      default:\n        break;\n    }\n\n    if (order) {\n      visiblePeople.reverse();\n    }\n\n    if (sex) {\n      visiblePeople = visiblePeople.filter(person => {\n        return person.sex === sex;\n      });\n    }\n\n    if (query) {\n      visiblePeople = visiblePeople.filter(person => {\n        const normalizedQuery = query.toLowerCase();\n\n        return person.name.toLowerCase().includes(normalizedQuery)\n          || person.fatherName?.toLowerCase().includes(normalizedQuery)\n          || person.motherName?.toLowerCase().includes(normalizedQuery);\n      });\n    }\n\n    if (centuries.length) {\n      visiblePeople = visiblePeople.filter(person => {\n        return centuries.some(century => +century === Math.floor(\n          (person.born - 1) / 100,\n        ) + 1);\n      });\n    }\n\n    return visiblePeople;\n  }, [sort, order, sex, query, centuries]);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          <div className=\"column is-7-tablet is-narrow-desktop\">\n            <PeopleFilters />\n          </div>\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {isLoading ? (\n                <Loader />\n              ) : (\n                <>\n                  <PeopleTable people={filteredPeople} />\n                  {isError && (\n                    <p data-cy=\"peopleLoadingError\">Something went wrong</p>\n                  )}\n                  {!people.length && (\n                    <p data-cy=\"noPeopleMessage\">\n                      There are no people on the server\n                    </p>\n                  )}\n                  {!filteredPeople.length && (\n                    <p>\n                      There are no people matching the current search criteria\n                    </p>\n                  )}\n                </>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ninterface Options {\n  isActive: boolean\n}\n\nconst getLinkClass = ({ isActive }: Options) => classNames('navbar-item', {\n  'has-background-grey-lighter': isActive,\n});\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink className={getLinkClass} to=\"/\">Home</NavLink>\n\n          <NavLink\n            aria-current=\"page\"\n            className={getLinkClass}\n            to=\"people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport { PeoplePage } from './components/PeoplePage';\nimport { Navbar } from './components/Navbar';\n\nimport './App.scss';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n            <Route path=\"people\" element={<PeoplePage />}>\n              <Route path=\":personSlug\" element={<PeoplePage />} />\n            </Route>\n            <Route path=\"home\" element={<Navigate to=\"/\" />} />\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n          </Routes>\n\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}